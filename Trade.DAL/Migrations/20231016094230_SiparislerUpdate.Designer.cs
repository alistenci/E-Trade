// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trade.DAL.Context;

#nullable disable

namespace Trade.DAL.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20231016094230_SiparislerUpdate")]
    partial class SiparislerUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trade.DAL.Entities.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad_Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kullanici_Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastLoginIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ad_Soyad = "Mehmet Ali",
                            Kullanici_Adi = "ali",
                            LastLoginDate = new DateTime(2023, 10, 16, 12, 42, 30, 494, DateTimeKind.Local).AddTicks(7566),
                            LastLoginIP = "",
                            Sifre = "202cb962ac59075b964b07152d234b70"
                        });
                });

            modelBuilder.Entity("Trade.DAL.Entities.AdminSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcikAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad_Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Il")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeSecenegi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostaKodu")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToplamFiyat")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("ePosta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.HasIndex("UrunId");

                    b.ToTable("Siparislerim");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Kategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("ustkategoribilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("E_Posta")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Eklenme_Tarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kullanici_Adi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("RolID");

                    b.ToTable("Kullaniciler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Marka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Marka");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Musteri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Posta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Siparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("Varchar(150)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("MailAdress")
                        .HasMaxLength(80)
                        .HasColumnType("Varchar(80)");

                    b.Property<int?>("MusteriID")
                        .HasColumnType("int");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("OdemeSecenegi")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(20)
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("Varchar(20)");

                    b.Property<DateTime>("RecDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ShippedFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SiparisDurumu")
                        .HasColumnType("int");

                    b.Property<int?>("UrunID")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("Varchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("MusteriID");

                    b.HasIndex("UrunID");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Siparis_Detay", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("ProductPicture")
                        .HasMaxLength(150)
                        .HasColumnType("Varchar(150)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int?>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SiparisID");

                    b.HasIndex("UrunID");

                    b.ToTable("Siparisler_Detay");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Slide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Picture")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slogan")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Slide");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Urun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Detay")
                        .HasColumnType("text");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<decimal>("Indirim_Miktari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KargoDetay")
                        .HasColumnType("text");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("Kategori_Id")
                        .HasColumnType("int");

                    b.Property<int?>("MarkaID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Satici_Id")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<int>("SumQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Urun_Aciklamasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Urun_Adi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Urun_Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ustkategoribilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.UrunResimEklee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<string>("Resim")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UrunID");

                    b.ToTable("UrunResimEklee");
                });

            modelBuilder.Entity("Trade.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("kullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trade.DAL.Entities.AdminSiparis", b =>
                {
                    b.HasOne("Trade.DAL.Entities.User", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trade.DAL.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Kategori", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Kategori", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentID");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Kullanici", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Siparis", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Musteri", null)
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriID");

                    b.HasOne("Trade.DAL.Entities.Urun", null)
                        .WithMany("Siparisler")
                        .HasForeignKey("UrunID");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Siparis_Detay", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Siparis", "Siparis")
                        .WithMany("SiparisDetayi")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trade.DAL.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID");

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Urun", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Trade.DAL.Entities.Marka", "Marka")
                        .WithMany("Urunler")
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kategori");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Trade.DAL.Entities.UrunResimEklee", b =>
                {
                    b.HasOne("Trade.DAL.Entities.Urun", "Urun")
                        .WithMany("UrunResimler")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Kategori", b =>
                {
                    b.Navigation("SubCategories");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Marka", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Musteri", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Siparis", b =>
                {
                    b.Navigation("SiparisDetayi");
                });

            modelBuilder.Entity("Trade.DAL.Entities.Urun", b =>
                {
                    b.Navigation("Siparisler");

                    b.Navigation("UrunResimler");
                });
#pragma warning restore 612, 618
        }
    }
}
